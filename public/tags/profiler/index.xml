<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Profiler on Random notes to myself</title>
    <link>https://localhost:1313/tags/profiler/</link>
    <description>Recent content in Profiler on Random notes to myself</description>
    <generator>Hugo -- 0.125.6</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Dec 2021 17:29:38 +0200</lastBuildDate>
    <atom:link href="https://localhost:1313/tags/profiler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple case of profiler usage in golang</title>
      <link>https://localhost:1313/posts/2021-12-28-simple-case-of-golang-profiler-usage/</link>
      <pubDate>Tue, 28 Dec 2021 17:29:38 +0200</pubDate>
      <guid>https://localhost:1313/posts/2021-12-28-simple-case-of-golang-profiler-usage/</guid>
      <description>So I was solving Construct Binary Tree from Inorder and Postorder Traversal and I got myself more less working solution that got accepted.
But it was not the fastest one.
But then I though â€” how do I profile buildTree function and see what actually takes time in my program?
Golang has an excellent set of tool available, just check an output of go tool. One of the items in a list you&amp;rsquo;ll see is pprof which is a Golang profiler.</description>
    </item>
  </channel>
</rss>
